import {
  a,
  o,
  o3 as o2
} from "./chunk-OCAWP7MB.js";

// node_modules/@tauri-apps/api/fs-af92a606.js
var o3;
function i(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "readTextFile", path: o4, options: i2 } })];
    });
  });
}
function r(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    var t;
    return a(this, function(e) {
      switch (e.label) {
        case 0:
          return [4, o2({ __tauriModule: "Fs", message: { cmd: "readFile", path: o4, options: i2 } })];
        case 1:
          return t = e.sent(), [2, Uint8Array.from(t)];
      }
    });
  });
}
function s(o4, i2, r2) {
  return o(this, void 0, void 0, function() {
    var t, s2;
    return a(this, function(e) {
      return typeof r2 == "object" && Object.freeze(r2), typeof o4 == "object" && Object.freeze(o4), t = { path: "", contents: "" }, s2 = r2, typeof o4 == "string" ? t.path = o4 : (t.path = o4.path, t.contents = o4.contents), typeof i2 == "string" ? t.contents = i2 != null ? i2 : "" : s2 = i2, [2, o2({ __tauriModule: "Fs", message: { cmd: "writeFile", path: t.path, contents: Array.from(new TextEncoder().encode(t.contents)), options: s2 } })];
    });
  });
}
function a2(o4, i2, r2) {
  return o(this, void 0, void 0, function() {
    var t, s2;
    return a(this, function(e) {
      return typeof r2 == "object" && Object.freeze(r2), typeof o4 == "object" && Object.freeze(o4), t = { path: "", contents: [] }, s2 = r2, typeof o4 == "string" ? t.path = o4 : (t.path = o4.path, t.contents = o4.contents), i2 && "dir" in i2 ? s2 = i2 : typeof o4 == "string" && (t.contents = i2 != null ? i2 : []), [2, o2({ __tauriModule: "Fs", message: { cmd: "writeFile", path: t.path, contents: Array.from(t.contents), options: s2 } })];
    });
  });
}
function u(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "readDir", path: o4, options: i2 } })];
    });
  });
}
function c(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "createDir", path: o4, options: i2 } })];
    });
  });
}
function d(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "removeDir", path: o4, options: i2 } })];
    });
  });
}
function f(o4, i2, r2) {
  return r2 === void 0 && (r2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "copyFile", source: o4, destination: i2, options: r2 } })];
    });
  });
}
function p(o4, i2) {
  return i2 === void 0 && (i2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "removeFile", path: o4, options: i2 } })];
    });
  });
}
function l(o4, i2, r2) {
  return r2 === void 0 && (r2 = {}), o(this, void 0, void 0, function() {
    return a(this, function(t) {
      return [2, o2({ __tauriModule: "Fs", message: { cmd: "renameFile", oldPath: o4, newPath: i2, options: r2 } })];
    });
  });
}
!function(t) {
  t[t.Audio = 1] = "Audio", t[t.Cache = 2] = "Cache", t[t.Config = 3] = "Config", t[t.Data = 4] = "Data", t[t.LocalData = 5] = "LocalData", t[t.Desktop = 6] = "Desktop", t[t.Document = 7] = "Document", t[t.Download = 8] = "Download", t[t.Executable = 9] = "Executable", t[t.Font = 10] = "Font", t[t.Home = 11] = "Home", t[t.Picture = 12] = "Picture", t[t.Public = 13] = "Public", t[t.Runtime = 14] = "Runtime", t[t.Template = 15] = "Template", t[t.Video = 16] = "Video", t[t.Resource = 17] = "Resource", t[t.App = 18] = "App", t[t.Log = 19] = "Log", t[t.Temp = 20] = "Temp";
}(o3 || (o3 = {}));
var h = Object.freeze({ __proto__: null, get BaseDirectory() {
  return o3;
}, get Dir() {
  return o3;
}, readTextFile: i, readBinaryFile: r, writeTextFile: s, writeFile: s, writeBinaryFile: a2, readDir: u, createDir: c, removeDir: d, copyFile: f, removeFile: p, renameFile: l });
export {
  o3 as BaseDirectory,
  o3 as Dir,
  f as copyFile,
  c as createDir,
  r as readBinaryFile,
  u as readDir,
  i as readTextFile,
  d as removeDir,
  p as removeFile,
  l as renameFile,
  a2 as writeBinaryFile,
  s as writeFile,
  s as writeTextFile
};
//# sourceMappingURL=@tauri-apps_api_fs.js.map
